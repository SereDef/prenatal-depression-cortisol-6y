ok$"0""
ok$"0"
ok$`0`
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var))
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
nodns <- summary(as.factor(spt$`1`))
cat(paste("Overall:    ", ns[1], "(", (ns[1]/nrow(depcor))*100, "%)",  ns[2], "(", (ns[2]/nrow(depcor))*100, "%)",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
npercent(depcor$maternalEdu)
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = (ns[1]/N)*100; prc1 = (ns[2]/N)*100;
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = (depns[1]/DEP)*100; depprc1 = (depns[2]/DEP)*100;
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = (nodpns[1]/NODEP)*100; nodepprc1 = (nodpns[2]/NODEP)*100;
cat(paste("Overall:    ", ns[1], "(", prc0, "%)",  ns[2], "(", prc1, "%)",
"\nBSI < 0.75: ", depns[1], "(", depprc0, "%)",  depns[2], "(", depprc1, "%)",
"\nBSI > 0.75: ", nodps[1], "(", nodepprc0, "%)",  nodps[2], "(", nodepprc1, "%)",, sep = ""))
}
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = (ns[1]/N)*100; prc1 = (ns[2]/N)*100;
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = (depns[1]/DEP)*100; depprc1 = (depns[2]/DEP)*100;
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = (nodpns[1]/NODEP)*100; nodepprc1 = (nodpns[2]/NODEP)*100;
cat(paste("Overall:    ", ns[1], "(", prc0, "%)",  ns[2], "(", prc1, "%)",
"\nBSI < 0.75: ", depns[1], "(", depprc0, "%)",  depns[2], "(", depprc1, "%)",
"\nBSI > 0.75: ", nodps[1], "(", nodepprc0, "%)",  nodps[2], "(", nodepprc1, "%)",
sep = ""))
}
npercent(depcor$maternalEdu)
################################################################################
# Load datasets
depcor <- readRDS(paste(pathtodata, 'dataset_raw.rds', sep = ""))
N <- nrow(depcor)
NODEP <- summary(as.factor(depcor$bsiScoreFlg))[1]
DEP <- summary(as.factor(depcor$bsiScoreFlg))[2]
cat(paste("Overall:   ", N,
"\nBSI < 0.75:", NODEP,
"\nBSI > 0.75:", DEP ))
meansd <- function(var, splitvar = depcor$bsiScoreFlg) {
totm <- format(round(mean(var), 1), nsmall = 1)
tots <- format(round(sd(var), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = (ns[1]/N)*100; prc1 = (ns[2]/N)*100;
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = (depns[1]/DEP)*100; depprc1 = (depns[2]/DEP)*100;
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = (nodpns[1]/NODEP)*100; nodepprc1 = (nodpns[2]/NODEP)*100;
cat(paste("Overall:    ", ns[1], "(", prc0, "%)",  ns[2], "(", prc1, "%)",
"\nBSI < 0.75: ", depns[1], "(", depprc0, "%)",  depns[2], "(", depprc1, "%)",
"\nBSI > 0.75: ", nodps[1], "(", nodepprc0, "%)",  nodps[2], "(", nodepprc1, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
npercent(depcor$maternalEdu)
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = (ns[1]/N)*100; prc1 = (ns[2]/N)*100;
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = (depns[1]/DEP)*100; depprc1 = (depns[2]/DEP)*100;
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = (nodns[1]/NODEP)*100; nodepprc1 = (nodns[2]/NODEP)*100;
cat(paste("Overall:    ", ns[1], "(", prc0, "%)",  ns[2], "(", prc1, "%)",
"\nBSI < 0.75: ", depns[1], "(", depprc0, "%)",  depns[2], "(", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], "(", nodepprc0, "%)",  nodns[2], "(", nodepprc1, "%)",
sep = ""))
}
npercent(depcor$maternalEdu)
nodepprc0 = round((nodns[1]/NODEP)*100, 2); nodepprc1 = round((nodns[2]/NODEP)*100, 2);
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 2); prc1 = round((ns[2]/N)*100, 2);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = round((depns[1]/DEP)*100, 2); depprc1 = round((depns[2]/DEP)*100, 2);
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = round((nodns[1]/NODEP)*100, 2); nodepprc1 = round((nodns[2]/NODEP)*100, 2);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
npercent(depcor$maternalEdu)
spt <- split(var, splitvar)
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
npercent(depcor$maternalEdu)
DEP
depns
meansd(depcor$prePregBMI)
meansd(depcor$gestAge)
meansd(depcor$familySS)
meansd(depcor$childAge)
meansd(depcor$lncortisol)
var = depcor$maternalEdu
splitvar = depcor$bsiScoreFlg
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`0`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`1`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
ns
depns
DEP
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
npercent(depcor$maternalIncome)
# check if the path to the dataset is already in memory, otherwise ask for it.
if (exists("pathtodata") == F) { pathtodata = readline(prompt="Enter path to data: ") }
################################################################################
# Load datasets
depcor <- readRDS(paste(pathtodata, 'dataset_raw.rds', sep = ""))
N <- nrow(depcor)
NODEP <- summary(as.factor(depcor$bsiScoreFlg))[1]
DEP <- summary(as.factor(depcor$bsiScoreFlg))[2]
cat(paste("Overall:   ", N,
"\nBSI < 0.75:", NODEP,
"\nBSI > 0.75:", DEP ))
meansd <- function(var, splitvar = depcor$bsiScoreFlg) {
totm <- format(round(mean(var), 1), nsmall = 1)
tots <- format(round(sd(var), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
npercent(depcor$maternalEdu)
npercent(depcor$maternalIncome)
npercent(depcor$sex)
npercent(depcor$childRaceEth)
meansd(depcor$gestAge)
meansd(depcor$familySS)
meansd(depcor$childAge)
meansd(depcor$lncortisol)
var = depcor$prePregBMI
splitvar = depcor$bsiScoreFlg
totm <- format(round(mean(var), 1), nsmall = 1)
tots <- format(round(sd(var), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
totm
mean(var)
var = depcor$prePregBMI
splitvar = depcor$bsiScoreFlg
totm <- format(round(mean(var, na.rm = T), 1), nsmall = 1)
tots <- format(round(sd(var, na.rm = T), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
splitm <- format(round(tapply(var, splitvar, mean, na.rm = T), 1), nsmall = 1)
splitm <- format(round(tapply(var, splitvar, mean, na.rm = T), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd, na.rm = T), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
npercent3(depcor$maternalSmoking)
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)", ns[3], " (", prc2, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",  depns[3], " (", depprc2, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)", nodns[3], " (", nodepprc2, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
# ------------------------------------------------------------------------------
# compute mean and standard deviation of entire sample and in cases vs controls
meansd <- function(var, splitvar = depcor$bsiScoreFlg) {
totm <- format(round(mean(var, na.rm = T), 1), nsmall = 1)
tots <- format(round(sd(var, na.rm = T), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean, na.rm = T), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd, na.rm = T), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for binary variables
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)", ns[3], " (", prc2, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",  depns[3], " (", depprc2, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)", nodns[3], " (", nodepprc2, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
npercent(depcor$maternalEdu)
npercent3(depcor$maternalSmoking)
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)  ", ns[3], " (", prc2, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)  ",  depns[3], " (", depprc2, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)  ", nodns[3], " (", nodepprc2, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
npercent(depcor$maternalEdu)
npercent3(depcor$maternalSmoking)
npercent(depcor$maternalIncome)
npercent(depcor$sex)
npercent(depcor$childRaceEth)
meansd(depcor$gestAge)
meansd(depcor$familySS)
meansd(depcor$childAge)
meansd(depcor$lncortisol)
var = depcor$prePregBMI
meansd(depcor$maternalAge)
meansd(depcor$maternalAge)
# check if the path to the dataset is already in memory, otherwise ask for it.
if (exists("pathtodata") == F) { pathtodata = readline(prompt="Enter path to data: ") }
################################################################################
# Load datasets
depcor <- readRDS(paste(pathtodata, 'dataset_raw.rds', sep = ""))
N <- nrow(depcor) # total sample N
NODEP <- summary(as.factor(depcor$bsiScoreFlg))[1] # N controls
DEP <- summary(as.factor(depcor$bsiScoreFlg))[2] # N cases
cat(paste("Overall:   ", N,
"\nBSI < 0.75:", NODEP,
"\nBSI > 0.75:", DEP ))
# ------------------------------------------------------------------------------
# compute mean and standard deviation of entire sample and in cases vs controls
meansd <- function(var, splitvar = depcor$bsiScoreFlg) {
totm <- format(round(mean(var, na.rm = T), 1), nsmall = 1)
tots <- format(round(sd(var, na.rm = T), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean, na.rm = T), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd, na.rm = T), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for binary variables
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)  ", ns[3], " (", prc2, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)  ",  depns[3], " (", depprc2, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)  ", nodns[3], " (", nodepprc2, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
cat(paste("Overall:   ", N,
"\nBSI < 0.75:", NODEP,
"\nBSI > 0.75:", DEP ))
# ------------------------------------------------------------------------------
# compute mean and standard deviation of entire sample and in cases vs controls
meansd <- function(var, splitvar = depcor$bsiScoreFlg) {
totm <- format(round(mean(var, na.rm = T), 1), nsmall = 1)
tots <- format(round(sd(var, na.rm = T), 2), nsmall = 2)
splitm <- format(round(tapply(var, splitvar, mean, na.rm = T), 1), nsmall = 1)
splits <- format(round(tapply(var, splitvar, sd, na.rm = T), 2), nsmall = 2)
cat(paste("Overall:    ", totm, "(± ", tots, ")",
"\nBSI < 0.75: ", splitm[1], "(± ", splits[1], ")",
"\nBSI > 0.75: ", splitm[2], "(± ", splits[2], ")", sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for binary variables
npercent <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)",
sep = ""))
}
# ------------------------------------------------------------------------------
# compute n and percent of entire sample and in cases vs controls for variables with 3 lvls
npercent3 <- function(var, splitvar = depcor$bsiScoreFlg) {
ns <- summary(as.factor(var));
prc0 = round((ns[1]/N)*100, 1); prc1 = round((ns[2]/N)*100, 1); prc2 = round((ns[3]/N)*100, 1);
spt <- split(var, splitvar)
depns <- summary(as.factor(spt$`1`))
depprc0 = round((depns[1]/DEP)*100, 1); depprc1 = round((depns[2]/DEP)*100, 1); depprc2 = round((depns[3]/DEP)*100, 1);
nodns <- summary(as.factor(spt$`0`))
nodepprc0 = round((nodns[1]/NODEP)*100, 1); nodepprc1 = round((nodns[2]/NODEP)*100, 1); nodepprc2 = round((nodns[3]/NODEP)*100, 1);
cat(paste("Overall:    ", ns[1], " (", prc0, "%)  ",  ns[2], " (", prc1, "%)  ", ns[3], " (", prc2, "%)",
"\nBSI < 0.75: ", depns[1], " (", depprc0, "%)  ",  depns[2], " (", depprc1, "%)  ",  depns[3], " (", depprc2, "%)",
"\nBSI > 0.75: ", nodns[1], " (", nodepprc0, "%)  ",  nodns[2], " (", nodepprc1, "%)  ", nodns[3], " (", nodepprc2, "%)",
sep = ""))
}
meansd(depcor$maternalAge)
meansd(depcor$prePregBMI)
x = 0.983458
round(x, 2)
round(x, 1)
x = 0.98887059847
round(x, 2)
x = 0.98587059847
round(x, 2)
x = 0.98487059847
round(x, 2)
npercent(depcor$maternalEdu)
npercent3(depcor$maternalSmoking)
npercent(depcor$maternalIncome)
npercent(depcor$sex)
npercent(depcor$childRaceEth)
meansd(depcor$gestAge)
meansd(depcor$familySS)
meansd(depcor$childAge)
meansd(depcor$lncortisol)
library(ggplot)
library(ggplot2)
p1 <- ggplot(depcor, aes(x = bsiScoreFlg, y = lncortisol, fill = bsiScoreFlg))+
geom_bar(stat = "identity", width = .8)+
geom_errorbar(aes(ymin = mean(lncortisol) - sd(lncortisol), ymax = mean(lncortisol) + sd(lncortisol)), width = .2)+
guides(fill=FALSE)+
ylim(0, 80)+
ylab('Score')+xlab('Group')+theme_cowplot()+
ggtitle("Figure R1: Barplot +/- SEM")
library(cowplot)
install.packages("cowplot")
library(cowplot)
p1 <- ggplot(depcor, aes(x = bsiScoreFlg, y = lncortisol, fill = bsiScoreFlg))+
geom_bar(stat = "identity", width = .8)+
geom_errorbar(aes(ymin = mean(lncortisol) - sd(lncortisol), ymax = mean(lncortisol) + sd(lncortisol)), width = .2)+
guides(fill=FALSE)+
ylim(0, 80)+
ylab('Score')+xlab('Group')+theme_cowplot()+
ggtitle("Figure R1: Barplot +/- SEM")
ggsave('1Barplot.png', width = w, height = h)
# width and height variables for saved plots
w = 6
h = 3
p1 <- ggplot(depcor, aes(x = bsiScoreFlg, y = lncortisol, fill = bsiScoreFlg))+
geom_bar(stat = "identity", width = .8)+
geom_errorbar(aes(ymin = mean(lncortisol) - sd(lncortisol), ymax = mean(lncortisol) + sd(lncortisol)), width = .2)+
guides(fill=FALSE)+
ylim(0, 80)+
ylab('Score')+xlab('Group')+theme_cowplot()+
ggtitle("Figure R1: Barplot +/- SEM")
ggsave('1Barplot.png', width = w, height = h)
p1
#Rainclouds with boxplots
p6 <- ggplot(depcor, aes(x=bsiScoreFlg, y=lncortisol, fill = bsiScoreFlg, colour = bsiScoreFlg))+
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = as.numeric(bsiScoreFlg)+0.25, y = lncortisol),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('ln(cortisol)')+xlab('Maternal Depression')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure R6: Change in Colour Palette")
if (!require(remotes)) {
install.packages("remotes")
}
remotes::install_github('jorvlan/raincloudplots')
library(raincloudplots)
#Rainclouds with boxplots
p6 <- ggplot(depcor, aes(x=bsiScoreFlg, y=lncortisol, fill = bsiScoreFlg, colour = bsiScoreFlg))+
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust =2, trim = FALSE)+
geom_point(position = position_jitter(width = .15), size = .25)+
geom_boxplot(aes(x = as.numeric(bsiScoreFlg)+0.25, y = lncortisol),outlier.shape = NA, alpha = 0.3, width = .1, colour = "BLACK") +
ylab('ln(cortisol)')+xlab('Maternal Depression')+coord_flip()+theme_cowplot()+guides(fill = FALSE, colour = FALSE) +
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure R6: Change in Colour Palette")
ggsave('6boxplots.png', width = w, height = h)
library(raincloudplots)
library(ggplot2)
library(cowplot)
library(raincloudplots)
install.packages("AER")
install.packages("devtools")
install.packages("png")
devtools::install_github("MRCIEU/TwoSampleMR")
devtools::install_github("MRCIEU/MRInstruments")
devtools::install_github("MRCIEU/MRInstruments", force = TRUE)
